version: '3'

volumes:
  production_postgres_data_gatekeeper: {}
  production_postgres_data_backups_gatekeeper: {}
  production_traefik_gatekeeper: {}
  production_django_media_gatekeeper: {}
  production_django_static_files_gatekeeper: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: gatekeeper_production_django
    volumes:
      - production_django_media_gatekeeper:/app/media
      - production_django_static_files_gatekeeper:/app/gatekeeper_backend/staticfiles
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: >
      bash -c "
        cd gatekeeper_backend &&
        python manage.py migrate &&
        python manage.py create_superuser &&
        /start"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: gatekeeper_production_postgres
    volumes:
      - production_postgres_data_gatekeeper:/var/lib/postgresql/data
      - production_postgres_data_backups_gatekeeper:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: gatekeeper_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik_gatekeeper:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'

  redis:
    image: redis:6

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: gatekeeper_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media_gatekeeper:/usr/share/nginx/media:ro
      - production_django_static_files_gatekeeper:/usr/share/nginx/static:ro
